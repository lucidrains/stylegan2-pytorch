#!/usr/bin/env python
import fire
from tqdm import tqdm
from stylegan2_pytorch import Trainer

def train_from_folder(
    data,
    results_dir = './results',
    models_dir = './models',
    name = 'default',
    new = False,
    load_from = -1,
    image_size = 128,
    batch_size = 3,
    gradient_accumulate_every = 5,
    network_capacity = 16,
    num_train_steps = 100000,
    learning_rate = 2e-4
):
    model = Trainer(
        name,
        data,
        results_dir,
        models_dir,
        batch_size = batch_size,
        gradient_accumulate_every = gradient_accumulate_every,
        image_size = image_size,
        network_capacity = network_capacity,
        lr = learning_rate
    )

    if not new:
        model.load(load_from)
    else:
        model.clear()

    for _ in tqdm(range(num_train_steps - model.steps), mininterval=10.):
        model.train()
        if _ % 50 == 0:
            model.print_log()

if __name__ == "__main__":
    fire.Fire(train_from_folder)
